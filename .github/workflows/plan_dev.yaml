name: Terraform Plan Development
on:
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID_DEV }}
      PROJECT_NAME: ${{ secrets.PROJECT_NAME_DEV }}
      PROJECT_NUMBER: ${{ secrets.PROJECT_NUMBER_DEV }}
      BILLING_ACCOUNT: ${{ secrets.BILLING_ACCOUNT_DEV }}
      POOL_ID: ${{ secrets.POOL_ID_DEV }}
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT_DEV }}
      ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME_DEV }}
      IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID_DEV }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME_DEV }}
      GOOGLE_CLOUD_SA_KEY: ${{ secrets.GOOGLE_CLOUD_SA_KEY_DEV }}
    steps:
      - name: Setup Google Cloud Authentication
        run: |
          echo '${{ env.GOOGLE_CLOUD_SA_KEY }}' > service-account-key.json
          echo 'GOOGLE_APPLICATION_CREDENTIALS=$PWD/service-account-key.json' >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Check Terraform Format
        run: terraform fmt -check -diff

    - name: Initialize Terraform
      run: |
        export GOOGLE_APPLICATION_CREDENTIALS=$PWD/service-account-key.json
        terraform init -backend-config='bucket=${{ env.BUCKET_NAME }}'

      - name: Run Terraform Plan
        run: terraform plan -lock-timeout=120s -var=project_id=${{ env.PROJECT_ID }} -var=project_name=${{ env.PROJECT_NAME }} -var=billing_account=${{ env.BILLING_ACCOUNT }} -var=android_package_name=${{ env.ANDROID_PACKAGE_NAME }} -var=ios_bundle_id=${{ env.IOS_BUNDLE_ID }}
